Up-Casting(조금 더 추상개념이 하위 개념을 가리키는 것? i.g. 사람은 동물이다)
: 부모 클래스 포인터가 자식 클래스 객체를 가리키는 것을 말한다.
이것이 가능한 이유는 자식 클래스 객체는 부모 클래스로 부터 상속 받았기 때문이다.
Point *pBase = pDer; //여기서 자식 객체를 가리킬 때 자식객체가 형변환을 할 필요 없다.
하지만, 부모클래스 포인터가 '자식클래스에서만 생성된 멤버함수'를 호출할 순 없다.

Down-Casting(동물은 사람이다? 오류.)
: 자식 클래스 객체 포인터가 부모 클래스 객체를 가리키는 것
반드시 형변환을 필요로 한다. 

동적 바인딩
: 기본 클래스 포인터로 파생클래스 객체를 가리킬 때(업 캐스팅), 오버라이딩된 가상 함수를 호출하면 자식클래스의
  오버라이딩된 가상 함수가 호출되는 것.
이것이 가능한 이유는 Virtual 키워드가 컴파일러에게 함수 호출을 (실행시간까지) 미루도록 지시하는 것이기 때문이다.


dynamic_cast 
: 상속관계 안에서 '포인터나 참조자의 타입'을 파생클래스 혹은 형제 클래스 타입으로 변환,
  다중 상속에서 기본 클래스간의 안전한 타입 캐스팅에 사용된다(?)


/*--------------------------------------------------------------------------------------------------------------------------*/
Base *pBase = new Base();

pBase->Show();

Derived *pDerived = dynamic_cast<Derived*>(pBase); // 부모 포인터가 가리키고 있는 클래스를 자식 클래스 포인터로 형변환

이때는 pDerived는 nullptr이다.

반면,

Base *pBase = new Derived(); //★ pBase가 가리키는 클래스는 자식 클래스인 Derived

pBase->Show();

Derived *pDerived = dynamic_cast<Derived*>(pBase); //따라서, dynamic_cast를 통해 다운 캐스팅 가능(!!)

(https://blockdmask.tistory.com/241)
(http://egloos.zum.com/sweeper/v/1907485)

(참고)
RTTI(런타임 형식 정보)는 프로그램 실행 중에 개체의 형식이 결정될 수 있도록 하는 메커니즘입니다. 
많은 클래스 라이브러리 공급업체가 이 기능을 자체적으로 구현하고 있었기 때문에 RTTI가 C++ 언어에 추가되었습니다. 
이 때문에 라이브러리 간에 호환되지 않는 문제가 발생하게 되었으므로,
언어 수준에서 런타임 형식 정보에 대한 지원이 필요하다는 사실이 명백해졌습니다.
/*--------------------------------------------------------------------------------------------------------------------------*/