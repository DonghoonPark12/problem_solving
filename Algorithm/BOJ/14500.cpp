#include <iostream>
#include <cstring>
#include <vector>
using namespace std;

//int map[500][500];
 
//typedef struct _xy {
//	int x, y;
//}xy;
//
//typedef struct _poly {
//	int h, w;
//	int xy[4][2];
//}poly;
//
//poly shape[19] = {
//	{1, 4, {{0,0}, {0,1}, {0,2}, {0,3}}}, //shape[0] 구조체를 선언하면서 초기화
//	{4, 1, {{0,0}, {1,0}, {2,0}, {3,0}}}, 
//	{3, 2, {{0,0}, {1,0}, {2,0}, {2,1}}},
//	{2, 3, {{0,0}, {0,1}, {0,2}, {1,0}}},
//	{2, 3, {{1,0}, {1,1}, {1,2}, {0,2}}},
//	{3, 2, {{0,0}, {0,1}, {1,1}, {2,1}}},
//
//	{3, 2, {{0,1},{1,1},{2,1},{2,0}}},
//	{2, 3, {{0,0},{0,1},{0,2},{1,2}}},
//	{3, 2, {{0,0},{1,0},{2,0},{0,1}}},
//	{2, 3, {{0,0},{1,0},{1,1},{1,2}}},
//
//	{2, 2, {{0,0},{1,0},{1,1},{0,1}}},
//
//	{3, 2, {{0,0},{1,0},{1,1},{2,1}}},
//	{2, 3, {{1,0},{1,1},{0,1},{0,2}}},
//	{3, 2, {{1,0},{1,1},{0,1},{2,0}}},
//	{2, 3, {{0,0},{0,1},{1,1},{1,2}}},
//	
//	{2, 3, {{0,0},{0,1},{0,2},{1,1}}},
//	{3, 2, {{0,0},{1,0},{2,0},{1,1}}},
//	{2, 3, {{1,0},{1,1},{0,1},{1,2}}},
//	{3, 2, {{1,0},{0,1},{1,1},{2,1}}}
//};
//
//int main() {
//	//freopen("input.txt", "r", stdin);
//
//	for (int t = 0; t < 19; t++) {
//		int n, m;
//		cin >> n >> m;
//		memset(map, 0, sizeof(map));
//
//		for (int i = 0; i < n; i++) {
//			for (int j = 0; j < m; j++) {
//				cin >> map[i][j];
//			}
//		}
//
//		int h, w, sum;
//		int _max = 0;
//		for (int s = 0; s < 19; s++) {
//			h = shape[s].h; w = shape[s].w;
//			for (int i = 0; i < n - h + 1; i++) { //시작점 y
//				for (int j = 0; j < m - w + 1; j++) { //시작점 x
//					sum = 0;
//					sum += map[shape[s].xy[0][0] + i][shape[s].xy[0][1] + j];
//					sum += map[shape[s].xy[1][0] + i][shape[s].xy[1][1] + j];
//					sum += map[shape[s].xy[2][0] + i][shape[s].xy[2][1] + j];
//					sum += map[shape[s].xy[3][0] + i][shape[s].xy[3][1] + j];
//					if (sum > _max)
//						_max = sum;
//				}
//			}
//		}
//
//		cout << _max << '\n';
//	}
//
//	return 0;
//}



