//[1]이미지에는 (매직넘버, Width, Height, 최대값)의 정보가 저장되어 있다. 따라서, 이미지를 하나의 구조체로 본다.
typedef struct {    
    char               M, N;        // 매직넘버 
    int     width;  
    int     height; 
    unsigned char** pixels;
} PBMImage;  

/*
[2]
메모리로 부터 이미지를 저장할 영역을 동적 할당 받는다.
동적 할당 받은 영역에 이미지를 Load한다. 
*/

int fnReadPBM(char* fileNm, PBMImage* img)
{
    FILE* fp = fopen(fileNm, "r");
    fscanf(fp, "%c %c", &img->M    , &img->N     );   // 매직넘버 읽기
    fscanf(fp, "%d %d", &img->width, &img->height);   // 가로, 세로 읽기
 
    // <-- 메모리 할당
    img->pixels = (unsigned char**)calloc(img->height, sizeof(unsigned char*));
 
    for(int i=0; i<img->height; i++){
        img->pixels[i] = (unsigned char*)calloc(img->width, sizeof(unsigned char));
    }
    // -->
 
    // <-- pbm 파일로부터 픽셀값을 읽어서 할당한 메모리에 load
    int tmp;
    for(int i=0; i<img->height; i++){
        for(int j=0; j<img->width; j++){
            fscanf(fp, "%d", &tmp);
            img->pixels[i][j] = (unsigned char)tmp;
        }
    }
    // -->
 
    fclose(fp); // 더 이상 사용하지 않는 파일을 닫아 줌
 
    return TRUE;
}

//[3] free, 해제 순서는 할당 받은 순서의 역순이다.

void fnClosePBM(PBMImage* img){
    for(int i=0; i<img->height; i++){
        free(img->pixels[i]);
    }
 
    free(img->pixels);
} 


 


 
